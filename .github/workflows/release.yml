name: ðŸš€ Multi-Platform Release (Portable + Installable)

on:
  push:
    tags:
      - "v*.*.*"

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4

      - name: Create Release Draft
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build-packages:
    needs: create-release
    strategy:
      matrix:
        os: [linux-oldglibc, windows, macos]
    runs-on: ${{ matrix.os == 'linux-oldglibc' && 'ubuntu-22.04' || matrix.os }}

    steps:
      - uses: actions/checkout@v4

      # Linux Build (Compatibility Mode)
      - name: Build Linux Binaries
        if: matrix.os == 'linux-oldglibc'
        uses: docker://ubuntu:18.04
        with:
          entrypoint: /bin/bash
          args: |
            apt-get update && apt-get install -y python3.11 python3-pip upx-ucl build-essential fpm
            pip install -r requirements.txt pyinstaller
            pyinstaller --onefile --name xtend src/xtend/cli.py \
              --add-data "src/xtend/static:static" \
              --add-data "src/xtend/templates:templates" \
              --upx-dir /usr/bin \
              --exclude-module PyQt5.QtWebEngine
            mkdir -p pkg/usr/local/bin
            cp dist/xtend pkg/usr/local/bin/
            fpm -s dir -t deb -n xtend -v ${{ github.ref_name }} \
              --deb-compression=xz \
              -C pkg \
              --description "Xtend Screen Management Tool"
            wget -q https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage \
              && chmod +x appimagetool-x86_64.AppImage \
              && ./appimagetool-x86_64.AppImage dist/xtend

      # Windows Build
      - name: Set up Windows
        if: matrix.os == 'windows'
        run: |
          choco install upx innosetup -y

      - name: Build Windows
        if: matrix.os == 'windows'
        run: |
          pyinstaller --onefile --name xtend src/xtend/cli.py `
            --windowed `
            --add-data "src/xtend/static;static" `
            --add-data "src/xtend/templates;templates" `
            --upx-dir "C:\ProgramData\chocolatey\lib\upx\tools" `
            --exclude-module PyQt5.QtWebEngine
          iscc /F"xtend-${{ github.ref_name }}-setup" packaging\windows.iss

      # macOS Build
      - name: Set up macOS
        if: matrix.os == 'macos'
        run: |
          brew install upx create-dmg

      - name: Build macOS
        if: matrix.os == 'macos'
        run: |
          pyinstaller --onefile --name xtend src/xtend/cli.py \
            --windowed \
            --add-data "src/xtend/static:static" \
            --add-data "src/xtend/templates:templates" \
            --upx-dir /usr/local/bin \
            --exclude-module PyQt5.QtWebEngine
          create-dmg --volname "Xtend" \
            --background packaging/mac-background.png \
            --window-size 800 400 \
            "dist/xtend-${{ github.ref_name }}.dmg" \
            "dist/xtend.app"

      # Upload artifacts
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          files: |
            dist/*.AppImage
            dist/*.deb
            dist/*.exe
            dist/*.msi
            dist/*.dmg
          token: ${{ secrets.GITHUB_TOKEN }}
