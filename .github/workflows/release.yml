name: ðŸš€ Cross-Platform Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup WiX
        run: |
          choco install wixtoolset
          $wixPath = "${env:ProgramFiles(x86)}\WiX Toolset v3.14\bin"
          echo "$wixPath" | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Build EXE
        shell: pwsh
        run: |
          pyinstaller --onefile --name xtend src/xtend/cli.py
          upx --best --lzma dist/xtend.exe

      - name: Generate Installer
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}".TrimStart('v') -replace '[^0-9.]', ''
          $msiVersion = ($version -split '\.' + @('0','0','0','0'))[0..3] -join '.'

          if (-not (Test-Path windows/.upgradecode)) {
              [guid]::NewGuid().ToString() | Out-File windows/.upgradecode
          }
          $upgradeCode = Get-Content windows/.upgradecode

          (Get-Content windows/xtend.wxs) `
            -replace 'VERSION_PLACEHOLDER', $msiVersion `
            -replace 'UPGRADE_CODE_GUID', $upgradeCode `
            -replace 'COMPONENT_GUID', ([guid]::NewGuid().ToString()) |
            Set-Content windows/xtend-autogen.wxs

          candle.exe -arch x64 -out dist/ windows/xtend-autogen.wxs
          light.exe -ext WixUIExtension -out dist/xtend-${{ github.ref_name }}.msi dist/xtend-autogen.wixobj

      - uses: actions/upload-artifact@v4
        with:
          name: windows-packages
          path: dist/*

  linux:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v4

      - name: Build in Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: .github/Dockerfile
          outputs: type=local,dest=dist
          build-args: |
            APP_VERSION=${{ github.ref_name }}

      - uses: actions/upload-artifact@v4
        with:
          name: linux-packages
          path: dist/*

  macos:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v4

      - name: Build DMG
        run: |
          pyinstaller --onefile --windowed --name xtend src/xtend/cli.py
          create-dmg dist/xtend.app

      - uses: actions/upload-artifact@v4
        with:
          name: macos-packages
          path: dist/*.dmg

  release:
    needs: [windows, linux, macos]
    runs-on: ubuntu-latest
    steps:
      - uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/windows-packages/*
            artifacts/linux-packages/*
            artifacts/macos-packages/*
